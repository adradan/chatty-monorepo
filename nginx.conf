http {
	## START DEFAULT SETTINGS
	sendfile on;
	tcp_nopush on;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##
	
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
	
	## END DEFAULT SETTINGS

	upstream backend {
		server 127.0.0.1:8000;
	}

	map $http_upgrade $connection_upgrade {
		default upgrade;
		''	close;
	}

	server {
	    listen 443 default_server ssl http2;
	    listen [::]:443 ssl http2;

	    server_name www.example.com;

	    ssl_certificate /etc/letsencrypt/live/www.example.com/fullchain.pem;
	    ssl_certificate_key /etc/letsencrypt/live/www.example.com/privkey.pem;

	    location / {
		proxy_pass http://0.0.0.0:3000;
	    }

	    location ~ /api/(?<apiroute>.+) {
		proxy_pass http://backend$apiroute;
		proxy_set_header Host $host;
		add_header test http://backend/$apiroute;
	    }

	    location /api {
	    	proxy_pass http://backend/;
		proxy_set_header Host $host;
		add_header test http://127.0.0.1/;
	    }

	    location = /api/ws {
	    	proxy_pass http://backend/ws/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
	    }


	    location = /api/ws/ {
	    	proxy_pass http://backend/ws/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
	    }

	    location = /api/ {
	    	proxy_pass http://127.0.0.1:8000/;
		proxy_set_header Host $host;
		add_header test http://127.0.0.1;
	    }
	}

	server {
	    listen 80;
	    listen [::]:80;

	    server_name www.example.com;
	    server_tokens off;

	    location /.well-known/acme-challenge/ {
		root /home/chattyuser/certbot/www;
	    }

	    location / {
		return 301 https://www.example.com$request_uri;
	    }
	}
}

